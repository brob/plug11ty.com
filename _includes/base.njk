<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Plug11ty - The 11ty Plugin Repository</title>
    <script src="https://identity.netlify.com/v1/netlify-identity-widget.js"></script>
    <link href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/style.css">
    <link rel="alternate" type="application/rss+xml" href="feed.xml" title="Plug11ty - The 11ty Plugin Repository">
<meta name="twitter:card" content="summary" />
<meta name="twitter:creator" content="@brob" />
<meta property="og:url" content="https://plug11ty.com/{{page.url}}" />
<meta property="og:title" content="{{ title }}" />
<meta property="og:description" content="{{ description }}" />
<meta property="og:image" content="https://plug11ty.com/assets/plug-social.png" />

<link rel="shortcut icon" href="/assets/favicon.png" type="image/x-icon">
  <script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js" defer></script>

<script>


var sourceData = {
    data: [
        {
            name: "Blog Tools",
            description:
                "This plugin is a series of shortcodes and filters that aim to help you write and organize your blog",
            url: "/plugins/blog-tools/",
            remoteUrl: "https://github.com/brob/eleventy-plugin-blog-tools",
            categories: ["content", "collection", "universal"]
        },

        {
            name: "Cloudinary Images",
            description:
                "An Eleventy shortcode that allows you to add an image from your cloudinary account.",
            url: "/plugins/cloudinary-images/",
            remoteUrl:
                "https://github.com/juanfernandes/eleventy-plugin-cloudinary",
            categories: ["images"]
        },

        {
            name: "Eleventy RSS Feed",
            description:
                "A pack of plugins for generating an RSS feed (actually an Atom feed, but who’s counting) using the Nunjucks templating engine.",
            url: "/plugins/eleventy-plugin-rss/",
            remoteUrl: "https://github.com/11ty/eleventy-plugin-rss",
            categories: ["utility", "official", "content"]
        },

        {
            name: "Inclusive Language",
            description:
                "An Eleventy linter plugin to check for inclusive language in markdown files. Inspired by CSS Tricks’ Words to Avoid in Educational Writing. No browser/client JavaScript here—everything is this plugin is done at build-time.",
            url: "/plugins/inclusive-language/",
            remoteUrl:
                "https://github.com/11ty/eleventy-plugin-inclusive-language",
            categories: ["official", "content"]
        },

        {
            name: "Navigation",
            description:
                "A plugin for creating hierarchical navigation in Eleventy projects. Supports breadcrumbs too! Used in production on this very website!",
            url: "/plugins/navigation/",
            remoteUrl: "https://github.com/11ty/eleventy-navigation",
            categories: ["utility", "official", "content"]
        },

        {
            name: "SVG Contents",
            description:
                "This is where a plugin description would go and it talks about a lot of stuff!",
            url: "/plugins/eleventy-plugin-svg-contents/",
            remoteUrl: "https://github.com/brob/eleventy-plugin-svg-contents",
            categories: ["utility", "images", "universal"]
        },

        {
            name: "Syntax Highlighting",
            description:
                "A pack of Eleventy plugins for syntax highlighting. No browser/client JavaScript here, these highlight transformations are all done at build-time.",
            url: "/plugins/eleventy-syntax-highlight/",
            remoteUrl:
                "https://github.com/11ty/eleventy-plugin-syntaxhighlight",
            categories: ["utility", "official"]
        }
    ]
};




function loadPlugins() {
 /*   const data = async function loadData() {
        const fetchedData = await fetch('/plugins.json');
        const jsonData = await fetchedData.json();
        const dataArray = await jsonData.data;
        console.log(dataArray)
        return await dataArray
    } 
    const returnedData = await data();
*/
    return {
        search: '',
        myForData: window.DATA,
        get filteredPlugins() {
            console.log(window.DATA)
            if (this.search === "") {
                return this.myForData;
            }
            return this.myForData.filter((item) => {
                console.log(item)
                return (
                    item.name
                        .toLowerCase()
                        .includes(this.search.toLowerCase()) ||
                    item.description
                        .toLowerCase()
                        .includes(this.search.toLowerCase())
                );
            });
        }
    };
}


  </script>


</head>
<body>
    {% include "header.njk" %}
    <section class="banner bg-black text-white py-20 mb-10">
        <div class="container max-w-5xl mx-auto">
        {% block bannerContent %}
            <h1 class="text-4xl lg:text-5xl mb-2">{{ title }}</h1>
            <p class="text-lg lg:text-xl">{{ description }}</p>
        {% endblock bannerContent %}
        </div>

    </section>
    <main class="main container max-w-5xl min-h-screen mx-auto">
       {% block main %}
            {{ content | safe }}
       {% endblock main %}
    </main>

    {% include "footer.njk" %}

</body>
</html>